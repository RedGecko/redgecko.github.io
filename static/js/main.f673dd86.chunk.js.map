{"version":3,"sources":["assets/logo.svg","contexts/index.tsx","components/Navbar.tsx","components/Footer.tsx","components/Breadcrumb.tsx","types/journal.tsx","components/JournalMessage.tsx","views/journal/Editor.tsx","views/journal/HotlineEditor.tsx","views/journal/List.tsx","views/incident/List.tsx","views/incident/Dashboard.tsx","views/resource/List.tsx","views/tasks/List.tsx","routes/IncidentRouter.tsx","client.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["IncidentContext","React","createContext","JournalContext","IncidentNavItem","incident","useContext","journal","className","to","activeClassName","exact","Navbar","isActive","useState","isMenuActive","setIsMenuActive","navbarMenuClass","classNames","src","logo","alt","role","aria-label","aria-expanded","data-target","onClick","e","preventDefault","aria-hidden","icon","faCog","href","Footer","faHeart","color","Breadcrumb","MessageStatus","dayjs","locale","de","extend","relativeTime","Message","Medium","sender","receiver","message","timeDate","status","assignments","messageClassNames","Status","Important","New","Critical","Triaged","assigmentsClassNames","column","length","fromNow","toString","map","a","ASSIGNMENTS","InputBox","Radio","medium","setMedium","value","onChange","selectMedium","currentTarget","Email","Phone","Object","values","RadioInput","PhoneInput","EmailInput","type","placeholder","faUser","faClock","rows","multiple","size","Editor","Date","subtract","_","times","faker","random","number","JournalMessage","slice","sample","name","findName","lorem","paragraphs","date","recent","List","faPhone","uuid","target","tenSentences","MapFrame","seconds","setSeconds","useEffect","interval","setInterval","clearInterval","height","Dashboard","IncidentRouter","match","useRouteMatch","path","component","IncidentDashboard","JournalEditor","JournalMessageList","ResourcesList","TaskList","HotlineEditor","IncidentList","client","ApolloClient","uri","cache","InMemoryCache","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,MAA0B,iCCEnCA,EAAkBC,IAAMC,cAAsB,wCAC9CC,EAAiBF,IAAMC,cAAsB,wC,OCuE7CE,EAAoC,WACtC,IAAMC,EAAWC,qBAAWN,GACtBO,EAAUD,qBAAWH,GAE3B,OACI,sBAAKK,UAAU,wCAAf,UACI,cAAC,IAAD,CAASA,UAAU,cAAcC,GAAG,uBAAuBC,gBAAgB,YAA3E,sCAGA,sBAAKF,UAAU,kBAAf,UACI,cAAC,IAAD,CAASA,UAAU,cAAcC,GAAI,aAAeJ,EAAW,aAAcK,gBAAgB,YAA7F,uBAGA,cAAC,IAAD,CAASF,UAAU,cAAcG,OAAO,EAAMF,GAAI,aAAeJ,EAAW,YAAaE,EAAUG,gBAAgB,YAAnH,qBAGA,cAAC,IAAD,CAASF,UAAU,cAAcC,GAAI,aAAeJ,EAAW,YAAcE,EAAU,QAASG,gBAAgB,YAAhH,gCAGA,cAAC,IAAD,CAASF,UAAU,cAAcC,GAAI,aAAeJ,EAAW,aAAcK,gBAAgB,YAA7F,oBAGA,cAAC,IAAD,CAASF,UAAU,cAAcC,GAAI,aAAeJ,EAAW,SAAUK,gBAAgB,YAAzF,qDAGA,cAAC,IAAD,CAASF,UAAU,cAAcC,GAAI,aAAeJ,EAAW,WAAYK,gBAAgB,YAA3F,4BASDE,EAjG0C,SAAC,GAA0B,IAAD,IAAvBC,gBAAuB,WACvCC,mBAAkBD,GADqB,mBACxEE,EADwE,KAC1DC,EAD0D,KAGzEC,EAAkBC,IAAW,CAC/B,eAAgB,EAChB,YAAaH,IAGjB,OACI,sBAAKP,UAAU,sBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,cAA1B,SACI,wBAAQA,UAAU,iBAAlB,SACI,qBAAKW,IAAKC,EAAMC,IAAI,OAAOb,UAAU,mBAG7C,oBAAGc,KAAK,SAASd,UAAU,uBAAuBe,aAAW,OAAOC,gBAAc,QAAQC,cAAY,cACtGC,QAAS,SAACC,GAAQA,EAAEC,iBAAkBZ,GAAiBD,IADvD,UAEA,sBAAMc,cAAY,SAClB,sBAAMA,cAAY,SAClB,sBAAMA,cAAY,eAItB,sBAAKrB,UAAWS,EAAhB,UACI,sBAAKT,UAAU,eAAf,UACI,sBAAKA,UAAU,wCAAf,UACI,cAAC,IAAD,CAASA,UAAU,cAAcC,GAAG,iBAAiBC,gBAAgB,YAArE,sBAGA,sBAAKF,UAAU,kBAAf,UACI,cAAC,IAAD,CAASA,UAAU,cAAcC,GAAG,iBAAiBC,gBAAgB,YAArE,0BAGA,cAAC,IAAD,CAASF,UAAU,cAAcC,GAAG,gBAAgBC,gBAAgB,YAApE,4CAMR,cAAC,EAAD,OAEJ,qBAAKF,UAAU,aAAf,SACI,sBAAKA,UAAU,gDAAf,UACI,mBAAGA,UAAU,cAAb,SACI,cAAC,IAAD,CAAiBsB,KAAMC,QAE3B,qBAAKvB,UAAU,kBAAf,SACA,mBAAGA,UAAU,cAAcwB,KAAK,iDAAhC,kCC5CTC,MAXf,WAEE,OACE,wBAAQzB,UAAU,kCAAlB,SACI,qBAAKA,UAAU,4BAAf,SACI,2CAAa,cAAC,IAAD,CAAiBsB,KAAMI,IAASC,MAAM,QAAnD,sBAA8E,qDCK3EC,ICbHC,E,6DAAAA,K,UAAAA,E,iBAAAA,E,oBAAAA,E,qBAAAA,M,KCiBZC,IAAMC,OAAOC,KACbF,IAAMG,OAAOC,KAoEEC,IC1BVC,ED0BUD,EAlEf,YAAsF,IAApEE,EAAmE,EAAnEA,OAAOC,EAA4D,EAA5DA,SAASC,EAAmD,EAAnDA,QAAQC,EAA2C,EAA3CA,SAASC,EAAkC,EAAlCA,OAAOC,EAA2B,EAA3BA,YAElDC,EAAoBjC,IAAW,CAC/B6B,SAAS,EACT,QAAQ,EACR,aAAcE,IAAWG,EAAOC,UAChC,aAAcJ,IAAWG,EAAOE,IAChC,YAAaL,IAAWG,EAAOG,SAC/B,UAAWN,IAAWG,EAAOI,UAG7BC,EAAuBvC,IAAW,CAClCwC,QAAQ,EACR,QAAQ,EACR,aAAcR,GAAqC,GAAtBA,EAAYS,SAE7C,OACI,qBAAKnD,UAAW2C,EAAhB,SACI,qBAAK3C,UAAU,eAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,oBACA,mBAAGA,UAAU,qBAAb,SAAmCqC,SAGvC,qBAAKrC,UAAU,+BAAf,SACI,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,0BACA,mBAAGA,UAAU,qBAAb,SAAmCsC,SAGvC,qBAAKtC,UAAU,+BAAf,SACI,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,kBACA,mBAAGA,UAAU,qBAAb,SAAmC8B,IAAMU,GAAUY,iBAGvD,qBAAKpD,UAAU,+BAAf,SACI,sBAAKA,UAAU,GAAf,UACA,mBAAGA,UAAU,oBAAb,yBACA,mBAAGA,UAAU,qBAAb,SAAmCyC,EAAOY,uBAKtD,qBAAKrD,UAAU,SAAf,SACI,qBAAKA,UAAU,4DAAf,SACKuC,MAGT,qBAAKvC,UAAWiD,EAAhB,SACI,qBAAKjD,UAAU,wCAAf,SACI,qBAAKA,UAAU,OAAf,SACM0C,GAAeA,EAAYY,KAAK,SAAAC,GAAM,OAAO,sBAAMvD,UAAU,gCAAhB,SAAiDuD,qB,iCCzD1HC,EAAc,CAAC,MAAO,OAAQ,MAAO,KAAM,QAmDjD,SAASC,IACL,IAAM5D,EAAWC,qBAAWN,GACtBO,EAAUD,qBAAWH,GAFX,EAIYW,mBAAS8B,EAAOsB,OAJ5B,mBAITC,EAJS,KAIDC,EAJC,KA0BhB,OACI,sBAAK5D,UAAU,MAAf,UACI,cAAC,IAAD,CAAMA,UAAU,uCAAuCC,GAAI,aAAeJ,EAAW,YAAaE,IAClG,sBAAKC,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,sBAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,sBAAf,SACA,wBAAQ6D,MAAOF,EAAQG,SAnB1B,SAAC3C,GAClBA,EAAEC,iBACF,IAAI2C,EAAe5C,EAAE6C,cAAcH,MAC/BE,IAAiB3B,EAAOsB,OAASK,IAAiB3B,EAAO6B,OAASF,IAAiB3B,EAAO8B,OAC1FN,EAAUG,IAeM,SACKI,OAAOC,OAAOhC,GAAQkB,KAAK,SAACK,GAAD,OAAqB,iCAAsBA,GAATA,mBA/BlFA,GAAUvB,EAAOsB,MACV,cAACW,EAAD,IAEPV,GAAUvB,EAAO8B,MACV,cAACI,EAAD,IAEPX,GAAUvB,EAAO6B,MACV,cAACM,EAAD,SADX,KAqCR,SAASD,IACL,OACI,mCACI,6CAKZ,SAASC,IACL,OACI,mCACI,8CAKZ,SAASF,IACL,OACI,qCACI,sBAAKrE,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,4BAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACI,oBAAGA,UAAU,qCAAb,UACI,uBAAOA,UAAU,QAAQwE,KAAK,OAAOC,YAAY,SACjD,sBAAMzE,UAAU,wBAAhB,SACI,cAAC,IAAD,CAAiBsB,KAAMoD,kBAO3C,sBAAK1E,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,sBAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACI,oBAAGA,UAAU,qCAAb,UACI,uBAAOA,UAAU,QAAQwE,KAAK,OAAOC,YAAY,SACjD,sBAAMzE,UAAU,wBAAhB,SACI,cAAC,IAAD,CAAiBsB,KAAMoD,kBAO3C,sBAAK1E,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,oBAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACI,oBAAGA,UAAU,qCAAb,UACI,uBAAOA,UAAU,QAAQwE,KAAK,OAAOC,YAAY,SACjD,sBAAMzE,UAAU,wBAAhB,SACI,cAAC,IAAD,CAAiBsB,KAAMqD,kBAO3C,sBAAK3E,UAAU,sBAAf,UACA,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,yBAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,UAAf,SACI,0BAAUA,UAAU,WAAWyE,YAAY,4BAAyBG,KAAM,cAMtF,sBAAK5E,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,uBAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACA,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,sBAAf,SACA,mCACI,iCAAS4C,EAAOI,UAChB,iCAASJ,EAAOC,YAChB,iCAASD,EAAOG,yBAQhC,sBAAK/C,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,4BAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACA,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,qBAAf,SACA,wBAAQ6E,UAAQ,EAACC,KAAM,EAAvB,SACKtB,EAAYF,KAAI,SAAAC,GAAM,OAAO,iCAASA,oBAQvD,sBAAKvD,UAAU,sBAAf,UACA,qBAAKA,UAAU,gBAEf,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACA,qBAAKA,UAAU,UAAf,SACI,wBAAQA,UAAU,oBAAlB,uC,SAtLfoC,K,aAAAA,E,gBAAAA,E,gBAAAA,M,KAiMU2C,MAvOf,WACI,IAAItC,EAASG,EAAOE,IAIhBN,EAAW,IAAIwC,KAYnB,OAVclD,IAAMU,GAAUyC,SAAS,EAAG,WAElBvE,IAAW,CAC/B6B,SAAS,EACT,aAAcE,GAAUG,EAAOE,MAO/B,8BACI,sBAAK9C,UAAU,UAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,aAAd,oBACA,cAACyD,EAAD,OAEJ,sBAAKzD,UAAU,SAAf,UACI,oBAAIA,UAAU,aAAd,qBACEkF,IAAEC,MAAMC,IAAMC,OAAOC,OAAO,KAAK,WAEvB,OAAO,cAACC,EAAD,CAAgB7C,YAAac,EAAYgC,MAAM,EAAEJ,IAAMC,OAAOC,OAAO9B,EAAYL,SAAUV,OAlC3FyC,IAAEO,OAAOtB,OAAOC,OAAOxB,IAkC+FP,OAAQ+C,IAAMM,KAAKC,WAAYrD,SAAU8C,IAAMM,KAAKC,WAAYpD,QAAS6C,IAAMQ,MAAMC,WAAW,GAAKrD,SAAU4C,IAAMU,KAAKC,OAAO,iBCoC/QC,MAnFf,WAEE,OACE,qCACE,oBAAIhG,UAAU,kBAAd,qBACA,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,4BAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACI,oBAAGA,UAAU,qCAAb,UACI,uBAAOA,UAAU,QAAQwE,KAAK,OAAOC,YAAY,SACjD,sBAAMzE,UAAU,wBAAhB,SACI,cAAC,IAAD,CAAiBsB,KAAMoD,kBAO3C,sBAAK1E,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,6BAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACI,oBAAGA,UAAU,qCAAb,UACI,uBAAOA,UAAU,QAAQwE,KAAK,MAAMC,YAAY,kBAChD,sBAAMzE,UAAU,wBAAhB,SACI,cAAC,IAAD,CAAiBsB,KAAM2E,kBAO3C,sBAAKjG,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,oBAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACI,oBAAGA,UAAU,qCAAb,UACI,uBAAOA,UAAU,QAAQwE,KAAK,OAAOC,YAAY,SACjD,sBAAMzE,UAAU,wBAAhB,SACI,cAAC,IAAD,CAAiBsB,KAAMqD,kBAO3C,sBAAK3E,UAAU,sBAAf,UACE,qBAAKA,UAAU,wBAAf,SACI,uBAAOA,UAAU,QAAjB,yBAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,UAAf,SACI,0BAAUA,UAAU,WAAWyE,YAAY,4BAAyBG,KAAM,cAMxF,sBAAK5E,UAAU,sBAAf,UACE,qBAAKA,UAAU,gBAEf,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACI,wBAAQA,UAAU,oBAAlB,uCClEVwD,EAAc,CAAC,MAAO,OAAQ,MAAO,KAAM,QAgBlCwC,MAdf,WACE,OACE,gCACI,oBAAIhG,UAAU,aAAd,qBACEkF,IAAEC,MAAMC,IAAMC,OAAOC,OAAO,KAAK,WAE3B,OAAO,cAACC,EAAD,CAA0C7C,YAAac,EAAYgC,MAAM,EAAEJ,IAAMC,OAAOC,OAAO9B,EAAYL,SAAUV,OAVrGyC,IAAEO,OAAOtB,OAAOC,OAAOxB,IAUyGP,OAAQ+C,IAAMM,KAAKC,WAAYrD,SAAU8C,IAAMM,KAAKC,WAAYpD,QAAS6C,IAAMQ,MAAMC,WAAW,GAAKrD,SAAU4C,IAAMU,KAAKC,OAAO,IAA5PX,IAAMC,OAAOa,eCN1CF,MAVf,WAEE,OACE,gCACA,oBAAIhG,UAAU,kBAAd,sBACA,mBAAGA,UAAU,oBAAoBwB,KAAK,oCAAoC2E,OAAO,SAAjF,uCCAEC,EAAe,kBAAMhB,IAAMQ,MAAMC,WAAW,IAElD,SAASQ,IAAY,IAAD,EAEc/F,mBAAS,GAFvB,mBAETgG,EAFS,KAEAC,EAFA,KAWhB,OAPAC,qBAAU,WACN,IAAMC,EAAWC,aAAY,WAC3BH,GAAW,SAAAD,GAAO,OAAIA,EAAU,QAC/B,KACH,OAAO,kBAAMK,cAAcF,MAC1B,IAGD,wBAAsBG,OAAO,QAAQjG,IAAI,uaAA5B2F,GA0FNO,MAtFf,WACE,OACE,gCACI,qBAAK7G,UAAU,4CAAf,SACI,oBAAIA,UAAU,cAAd,wCAEJ,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,sBAAKA,UAAU,+EAAf,UACA,oBAAIA,UAAU,2BAAd,sBACI,sBAAKA,UAAU,iBAAf,UACG,qBAAKA,UAAU,+BAAf,SACK,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,kBACA,mBAAGA,UAAU,wCAAb,SAAsDoF,IAAMC,OAAOC,OAAO,WAG9E,qBAAKtF,UAAU,+BAAf,SACI,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,uBACA,mBAAGA,UAAU,wCAAb,SAAsDoF,IAAMC,OAAOC,OAAO,WAG9E,qBAAKtF,UAAU,+BAAf,SACI,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,6BACA,mBAAGA,UAAU,wCAAb,SAAsDoF,IAAMC,OAAOC,OAAO,WAG9E,qBAAKtF,UAAU,+BAAf,SACI,sBAAKA,UAAU,GAAf,UACA,mBAAGA,UAAU,oBAAb,wBACA,mBAAGA,UAAU,wCAAb,SAAsDoF,IAAMC,OAAOC,OAAO,iBAKtF,sBAAKtF,UAAU,6EAAf,UACI,oBAAIA,UAAU,2BAAd,oBACA,sBAAKA,UAAU,iBAAf,UACG,qBAAKA,UAAU,kDAAf,SACK,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,uBACA,mBAAGA,UAAU,wCAAb,SAAsDoF,IAAMC,OAAOC,OAAO,WAG9E,qBAAKtF,UAAU,kDAAf,SACI,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,qBACA,mBAAGA,UAAU,wCAAb,SAAsDoF,IAAMC,OAAOC,OAAO,WAG9E,qBAAKtF,UAAU,+BAAf,SACI,sBAAKA,UAAU,OAAf,UACA,mBAAGA,UAAU,oBAAb,gCACA,mBAAGA,UAAU,wCAAb,SAAsDoF,IAAMC,OAAOC,OAAO,WAG9E,qBAAKtF,UAAU,+BAAf,SACI,sBAAKA,UAAU,GAAf,UACA,mBAAGA,UAAU,oBAAb,yBACA,mBAAGA,UAAU,wCAAb,SAAsDoF,IAAMC,OAAOC,OAAO,oBAM1F,sBAAKtF,UAAU,6BAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAACqG,EAAD,MAEJ,qBAAKrG,UAAU,oBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,aAAd,qCACA,cAACuF,EAAD,CAAgB7C,YAAa,CAAC,OAAQ,OAAQD,OAAQG,EAAOC,UAAWR,OAAQ+C,IAAMM,KAAKC,WAAYrD,SAAU8C,IAAMM,KAAKC,WAAYpD,QAAS6D,IAAiB5D,SAAU4C,IAAMU,KAAKC,OAAO,KAC9L,cAACR,EAAD,CAAgB7C,YAAa,CAAC,KAAM,OAAQD,OAAQG,EAAOG,SAAUV,OAAQ+C,IAAMM,KAAKC,WAAYrD,SAAU8C,IAAMM,KAAKC,WAAYpD,QAAS6D,IAAiB5D,SAAU4C,IAAMU,KAAKC,OAAO,KAC3L,cAACR,EAAD,CAAgB7C,YAAa,CAAC,MAAO,KAAM,OAAOD,OAAQG,EAAOC,UAAWR,OAAQ+C,IAAMM,KAAKC,WAAYrD,SAAU8C,IAAMM,KAAKC,WAAYpD,QAAS6D,IAAiB5D,SAAU4C,IAAMU,KAAKC,OAAO,oBC5F3MC,MAPf,WAEE,OACE,oBAAIhG,UAAU,kBAAd,qBCIWgG,MAPf,WAEE,OACE,oBAAIhG,UAAU,kBAAd,wBC0BW8G,MAnBf,WACI,IAAIC,EAAQC,cACd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAI,UAAKF,EAAME,KAAX,0BAAyCC,UAAWC,IAC/D,cAAC,IAAD,CAAOF,KAAI,UAAKF,EAAME,KAAX,wCAAyDC,UAAWE,IAC/E,cAAC,IAAD,CAAOH,KAAI,UAAKF,EAAME,KAAX,mCAAoDC,UAAWG,IAC1E,cAAC,IAAD,CAAOJ,KAAI,UAAKF,EAAME,KAAX,0BAA2CC,UAAWI,IACjE,cAAC,IAAD,CAAOL,KAAI,UAAKF,EAAME,KAAX,sBAAuCC,UAAWK,IAC7D,cAAC,IAAD,CAAON,KAAI,UAAKF,EAAME,KAAX,wBAAyCC,UAAWM,IAG/D,cAAC,IAAD,CAAOP,KAAI,UAAKF,EAAME,KAAX,SAAwBC,UAAWO,IAE9C,cAAC,IAAD,CAAOR,KAAMF,EAAME,KAAMC,UAAWO,Q,QCjB3BC,EAPA,IAAIC,eAAa,CAC9BC,IAAK,aACLC,MAAO,IAAIC,kBCiCEC,MArBf,WACE,OACE,cAAC,iBAAD,CAAgBL,OAAQA,EAAxB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,yBAAS1H,UAAU,UAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiH,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUhH,GAAG,oEAInB,cAAC,EAAD,UCjBO+H,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f673dd86.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.55ebcc53.svg\";","import { getDefaultValues } from '@apollo/client/utilities';\nimport React from 'react';\nconst IncidentContext = React.createContext<String>(\"6796c0d0-ddfa-4d81-870b-121200723e0c\");\nconst JournalContext = React.createContext<String>(\"f4cce005-6c24-4923-8549-f1fba6bd806a\");\n\nexport {\n    JournalContext,\n    IncidentContext,\n}","import React, {FunctionComponent,useState,useContext} from 'react';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\n\nimport logo from 'assets/logo.svg';\nimport { Link, NavLink, useParams } from 'react-router-dom';\nimport {IncidentContext, JournalContext} from 'contexts';\n\ntype NavbarProps = {}\n\nconst Navbar:FunctionComponent<{ isActive?: boolean }> = ({ isActive = false }) => {\n    const [isMenuActive, setIsMenuActive] = useState<boolean>(isActive);\n\n    const navbarMenuClass = classNames({\n        'navbar-menu' : true,\n        'is-active': isMenuActive,\n    });\n\n    return (\n        <nav className=\"navbar is-fixed-top\">\n            <div className=\"navbar-brand\">\n                <NavLink to=\"/\" className=\"navbar-item\">\n                    <figure className=\"image is-16x16\" >\n                        <img src={logo} alt=\"Logo\" className=\"is-rounded\"/>\n                    </figure>\n                </NavLink> \n                <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasic\"\n                onClick={(e) => { e.preventDefault(); setIsMenuActive(!isMenuActive);}}>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n    \n            <div className={navbarMenuClass}>\n                <div className=\"navbar-start\">\n                    <div className=\"navbar-item has-dropdown is-hoverable\">\n                        <NavLink className=\"navbar-item\" to=\"/incident/list\" activeClassName=\"is-active\">\n                            Ereignis\n                        </NavLink>\n                        <div className=\"navbar-dropdown\">\n                            <NavLink className=\"navbar-item\" to=\"/incident/list\" activeClassName=\"is-active\">\n                                Übersicht\n                            </NavLink>\n                            <NavLink className=\"navbar-item\" to=\"/incident/new\" activeClassName=\"is-active\">\n                                Neues Ereignis erstellen\n                            </NavLink>\n\n                        </div>\n                    </div>\n                    <IncidentNavItem />\n                </div>\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item has-dropdown is-hoverable is-left\">\n                        <a className=\"navbar-link\" > \n                            <FontAwesomeIcon icon={faCog} />\n                        </a>\n                        <div className=\"navbar-dropdown\">\n                        <a className=\"navbar-item\" href=\"https://bulma.io/documentation/overview/start/\">\n                            Profil\n                        </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\ninterface IRouteParams {\n    incidentId: string,\n}\n\nconst IncidentNavItem:FunctionComponent = () => {\n    const incident = useContext(IncidentContext);\n    const journal = useContext(JournalContext);\n\n    return (\n        <div className=\"navbar-item has-dropdown is-hoverable\">\n            <NavLink className=\"navbar-item\" to=\"/incident/{incident}\" activeClassName=\"is-active\">\n                GBT Einsatzübung 2021\n            </NavLink>\n            <div className=\"navbar-dropdown\">\n                <NavLink className=\"navbar-item\" to={\"/incident/\" + incident + \"/dashboard\"} activeClassName=\"is-active\">\n                    Dashboard\n                </NavLink>\n                <NavLink className=\"navbar-item\" exact={true} to={\"/incident/\" + incident + \"/journal/\"+ journal } activeClassName=\"is-active\">\n                    Journal\n                </NavLink>\n                <NavLink className=\"navbar-item\" to={\"/incident/\" + incident + \"/journal/\" + journal + \"/edit\"} activeClassName=\"is-active\">\n                    Journal bearbeiten\n                </NavLink>\n                <NavLink className=\"navbar-item\" to={\"/incident/\" + incident + \"/resources\"} activeClassName=\"is-active\">\n                    Mittel\n                </NavLink>                    \n                <NavLink className=\"navbar-item\" to={\"/incident/\" + incident + \"/tasks\"} activeClassName=\"is-active\">\n                    Pendenzen / Anträge / Bedürfnisse\n                </NavLink>   \n                <NavLink className=\"navbar-item\" to={\"/incident/\" + incident + \"/hotline\"} activeClassName=\"is-active\">\n                    Hotline\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n  \n\nexport default Navbar;\n","import React from 'react';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Footer() {\n  \n  return (\n    <footer className=\"footer has-background-white-bis\">\n        <div className=\"content has-text-centered\">\n            <p>Made with <FontAwesomeIcon icon={faHeart} color=\"red\" /> in Switzerland by <strong>ZSO Uri</strong></p>\n        </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n\n\n\n\n\n\n\n\n\n","import React from 'react';\n\nfunction Breadcrumb() {\n  \n  return (\n    <nav className=\"breadcrumb has-arrow-separator\" aria-label=\"breadcrumbs\">\n    <ul>\n      <li><a href=\"/incident/6796c0d0-ddfa-4d81-870b-121200723e0c/dashboard\">GBT Einsatzübung 2021</a></li>\n      <li className=\"is-active\"><a href=\"/incident/6796c0d0-ddfa-4d81-870b-121200723e0c/journal/20728c11-a3ab-4c07-b8d5-c615ac628f53\" aria-current=\"page\">Journal</a></li>\n    </ul>\n  </nav>\n  );\n}\n\nexport default Breadcrumb;\n","\nexport enum MessageStatus {\n    New = \"neu\",\n    Triaged = \"normal\",\n    Important = \"wichtig\",\n    Critical = \"kritisch\"\n}\n\n","import React from 'react';\nimport dayjs from \"dayjs\";\nimport de from 'dayjs/locale/de';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport classNames from 'classnames';\n\nimport {MessageStatus as Status} from 'types';\n\nexport interface MessageProps {\n    sender: string;\n    receiver: string;\n    timeDate: Date;\n    message: string;\n    status: Status;\n    assignments?: String[];\n}\n\n\ndayjs.locale(de);\ndayjs.extend(relativeTime);\n\nfunction Message({sender,receiver,message,timeDate,status,assignments}:MessageProps) {\n\n    let messageClassNames = classNames({\n        message: true,\n        'mb-2': true,\n        'is-warning': status === Status.Important,\n        'is-success': status === Status.New,\n        'is-danger': status === Status.Critical,\n        'is-dark': status === Status.Triaged,\n    });\n\n    let assigmentsClassNames = classNames({\n        column: true,\n        'is-1': true,\n        'is-hidden': !assignments || assignments.length == 0\n    })\n    return (\n        <div className={messageClassNames}>\n            <div className=\"message-body\">\n                <div className=\"columns\">\n                    <div className=\"column is-2\">\n                        <nav className=\"level is-block\">\n                            <div className=\"level-item has-text-centered\">\n                                <div className=\"mb-2\">\n                                <p className=\"heading is-size-7\" >Sender</p>\n                                <p className=\"subtitle is-size-7\">{sender}</p>\n                                </div>\n                            </div>\n                            <div className=\"level-item has-text-centered\">\n                                <div className=\"mb-2\">\n                                <p className=\"heading is-size-7\">Empfänger</p>\n                                <p className=\"subtitle is-size-7\">{receiver}</p>\n                                </div>\n                            </div>\n                            <div className=\"level-item has-text-centered\">\n                                <div className=\"mb-2\">\n                                <p className=\"heading is-size-7\">Zeit</p>\n                                <p className=\"subtitle is-size-7\">{dayjs(timeDate).fromNow()}</p>\n                                </div>\n                            </div>\n                            <div className=\"level-item has-text-centered\">\n                                <div className=\"\">\n                                <p className=\"heading is-size-7\">Prioriät</p>\n                                <p className=\"subtitle is-size-7\">{status.toString()}</p>\n                                </div>\n                            </div>\n                        </nav>\n                    </div>\n                    <div className=\"column\">\n                        <div className=\"content has-text-weight-light has-text-dark has-text-left\">\n                            {message}\n                        </div>\n                    </div>\n                    <div className={assigmentsClassNames}>\n                        <div className=\"field is-grouped is-grouped-multiline\">\n                            <div className=\"tags\">\n                                { assignments && assignments.map( a => {return <span className=\"tag is-grey is-light is-small\">{a}</span> })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React, { useContext, useState } from 'react';\n\nimport {JournalMessage} from 'components';\nimport {MessageStatus as Status} from 'types';\n\nimport dayjs from \"dayjs\";\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport classNames from 'classnames';\n\nimport {IncidentContext,JournalContext} from 'contexts';\n\n// FIXME(daa): remove\nimport faker from \"faker/locale/de\";\nimport _ from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nconst getRandomStatus = () => { return _.sample(Object.values(Status)) as Status }\n\n// FIXME(daa): remove\nconst ASSIGNMENTS = [\"Pol\", \"Lage\", \"San\", \"FW\", \"Tech\"]\n\n\nfunction Editor() {\n    let status = Status.New;\n    let sender = \"foobar\";\n    let receiver = \"foobarbaz\";\n    let message = \"adsfasd fasdf asdf asdfsf\"\n    let timeDate = new Date();\n\n    let dayTime = dayjs(timeDate).subtract(4, \"minutes\");\n   \n    let messageClassNames = classNames({\n        message: true,\n        'is-warning': status == Status.New,\n        // 'is-danger': status == Status.Important,\n        // 'is-dark': status == Status.Triaged,\n    });\n\n\n    return (\n        <div>\n            <div className=\"columns\">\n                <div className=\"column is-half\">\n                    <h3 className=\"title is-3\">Editor</h3>\n                    <InputBox />\n                </div>\n                <div className=\"column\">\n                    <h3 className=\"title is-3\">Journal</h3>\n                    { _.times(faker.random.number(20), () => \n                            { \n                                return <JournalMessage assignments={ASSIGNMENTS.slice(0,faker.random.number(ASSIGNMENTS.length))} status={getRandomStatus()} sender={faker.name.findName()} receiver={faker.name.findName()} message={faker.lorem.paragraphs(2)}  timeDate={faker.date.recent(1)}/>\n                            }\n                        )\n                    }\n                </div> \n            </div>\n        </div>\n    );\n}\n\nenum Medium {\n    Radio = \"Funk\",\n    Phone = \"Telefon\",\n    Email = \"E-Mail\",\n};\n\ninterface IPropsInputBox {\n    initialMedium?: Medium\n}\n\nfunction InputBox() {\n    const incident = useContext(IncidentContext);\n    const journal = useContext(JournalContext);\n\n    const [medium, setMedium] = useState(Medium.Radio)\n\n    const renderFormContent = () => {\n        if (medium == Medium.Radio ) {\n            return <RadioInput />\n        }\n        if (medium == Medium.Phone ) {\n            return <PhoneInput />\n        }\n        if (medium == Medium.Email ) {\n            return <EmailInput />\n        }\n    }\n\n    const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        e.preventDefault();\n        let selectMedium = e.currentTarget.value;\n        if (selectMedium === Medium.Radio || selectMedium === Medium.Email || selectMedium === Medium.Phone) {\n            setMedium(selectMedium);\n        }\n    }\n\n    return (\n        <div className=\"box\" >\n            <Link className=\"delete is-pulled-right is-small mb-2\" to={\"/incident/\" + incident + \"/journal/\"+ journal } />\n            <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                    <label className=\"label\">Medium</label>\n                </div>\n                <div className=\"field-body\">\n                    <div className=\"field is-narrow\">\n                        <div className=\"control\">\n                            <div className=\"select is-fullwidth\">\n                            <select value={medium} onChange={handleChange}>\n                                {Object.values(Medium).map( (medium: Medium) => (<option key={medium}>{medium}</option>))}\n                            </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            { renderFormContent() } \n        </div>\n    );\n}\n\nfunction PhoneInput() {\n    return (\n        <>\n            <p>Phone Form</p>\n        </>\n    )\n}\n\nfunction EmailInput() {\n    return (\n        <>\n            <p>Email Input</p>\n        </>\n    )\n}\n\nfunction RadioInput() {\n    return (\n        <>\n            <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                    <label className=\"label\">Empfänger</label>\n                </div>\n                <div className=\"field-body\">\n                    <div className=\"field\">\n                        <p className=\"control is-expanded has-icons-left\">\n                            <input className=\"input\" type=\"text\" placeholder=\"Name\" />\n                            <span className=\"icon is-small is-left\">\n                                <FontAwesomeIcon icon={faUser} />\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                    <label className=\"label\">Sender</label>\n                </div>\n                <div className=\"field-body\">\n                    <div className=\"field\">\n                        <p className=\"control is-expanded has-icons-left\">\n                            <input className=\"input\" type=\"text\" placeholder=\"Name\" />\n                            <span className=\"icon is-small is-left\">\n                                <FontAwesomeIcon icon={faUser} />\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                    <label className=\"label\">Zeit</label>\n                </div>\n                <div className=\"field-body\">\n                    <div className=\"field\">\n                        <p className=\"control is-expanded has-icons-left\">\n                            <input className=\"input\" type=\"text\" placeholder=\"Zeit\" />\n                            <span className=\"icon is-small is-left\">\n                                <FontAwesomeIcon icon={faClock} />\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n                <label className=\"label\">Nachricht</label>\n            </div>\n            <div className=\"field-body\">\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <textarea className=\"textarea\" placeholder=\"Was wurde übermittelt?\" rows={10} />\n                    </div>\n                </div>\n            </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                    <label className=\"label\">Prority</label>\n                </div>\n                <div className=\"field-body\">\n                    <div className=\"field is-narrow\">\n                    <div className=\"control\">\n                        <div className=\"select is-fullwidth\">\n                        <select>\n                            <option>{Status.Triaged}</option>\n                            <option>{Status.Important}</option>\n                            <option>{Status.Critical}</option>\n                        </select>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                    <label className=\"label\">Fachbereiche</label>\n                </div>\n                <div className=\"field-body\">\n                    <div className=\"field is-narrow\">\n                    <div className=\"control\">\n                        <div className=\"select is-multiple\">\n                        <select multiple size={3}>\n                            {ASSIGNMENTS.map(a => {return <option>{a}</option>})}\n                        </select>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n            <div className=\"field-label\">\n            </div>\n            <div className=\"field-body\">\n                <div className=\"field\">\n                <div className=\"control\">\n                    <button className=\"button is-primary\">\n                    Send message\n                    </button>\n                </div>\n                </div>\n            </div>\n            </div>\n        </>\n    );\n}\n\nexport default Editor;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock, faPhone, faUser } from '@fortawesome/free-solid-svg-icons';\n\nfunction List() {\n  \n  return (\n    <>\n      <h3 className=\"title is-size-3\">Hotline</h3>\n      <div className=\"field is-horizontal\">\n        <div className=\"field-label is-normal\">\n            <label className=\"label\">Name Anrufer</label>\n        </div>\n        <div className=\"field-body\">\n            <div className=\"field\">\n                <p className=\"control is-expanded has-icons-left\">\n                    <input className=\"input\" type=\"text\" placeholder=\"Name\" />\n                    <span className=\"icon is-small is-left\">\n                        <FontAwesomeIcon icon={faUser} />\n                    </span>\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <div className=\"field is-horizontal\">\n        <div className=\"field-label is-normal\">\n            <label className=\"label\">Telefonnummer</label>\n        </div>\n        <div className=\"field-body\">\n            <div className=\"field\">\n                <p className=\"control is-expanded has-icons-left\">\n                    <input className=\"input\" type=\"tel\" placeholder=\"Telefonnummer\" />\n                    <span className=\"icon is-small is-left\">\n                        <FontAwesomeIcon icon={faPhone} />\n                    </span>\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <div className=\"field is-horizontal\">\n        <div className=\"field-label is-normal\">\n            <label className=\"label\">Zeit</label>\n        </div>\n        <div className=\"field-body\">\n            <div className=\"field\">\n                <p className=\"control is-expanded has-icons-left\">\n                    <input className=\"input\" type=\"text\" placeholder=\"Zeit\" />\n                    <span className=\"icon is-small is-left\">\n                        <FontAwesomeIcon icon={faClock} />\n                    </span>\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <div className=\"field is-horizontal\">\n      <div className=\"field-label is-normal\">\n          <label className=\"label\">Nachricht</label>\n      </div>\n      <div className=\"field-body\">\n          <div className=\"field\">\n              <div className=\"control\">\n                  <textarea className=\"textarea\" placeholder=\"Was wurde übermittelt?\" rows={10} />\n              </div>\n          </div>\n      </div>\n    </div>\n\n    <div className=\"field is-horizontal\">\n      <div className=\"field-label\">\n      </div>\n      <div className=\"field-body\">\n          <div className=\"field\">\n            <div className=\"control\">\n                <button className=\"button is-primary\">\n                Send message\n                </button>\n            </div>\n          </div>\n      </div>\n    </div>\n      </>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport faker from \"faker/locale/de\";\n\nimport {JournalMessage} from 'components';\nimport {MessageStatus as Status} from 'types';\n\nimport _ from 'lodash';\n\nconst getRandomStatus = () => { return _.sample(Object.values(Status)) as Status }\n\nconst ASSIGNMENTS = [\"Pol\", \"Lage\", \"San\", \"FW\", \"Tech\"]\n\nfunction List() {\n  return (\n    <div>\n        <h3 className=\"title is-3\">Journal</h3>\n        { _.times(faker.random.number(20), () => \n              { \n                return <JournalMessage key={faker.random.uuid()} assignments={ASSIGNMENTS.slice(0,faker.random.number(ASSIGNMENTS.length))} status={getRandomStatus()} sender={faker.name.findName()} receiver={faker.name.findName()} message={faker.lorem.paragraphs(2)}  timeDate={faker.date.recent(1)}/>\n              }\n            )\n        }\n    </div>\n  );\n}\n\nexport default List;\n","import React from 'react';\n\nfunction List() {\n  \n  return (\n    <div>\n    <h3 className=\"title is-size-3\">Ereignis</h3>\n    <a className=\"button is-primary\" href=\"https://s.geo.admin.ch/8eed1e8870\" target=\"_blank\">Lage Karte bearbeiten</a>\n    </div>\n  );\n}\n\nexport default List;\n","import React, {useState, useEffect} from 'react';\nimport faker from \"faker/locale/de\";\n\nimport { JournalMessage } from '../../components';\nimport { MessageStatus as Status } from '../../types';\n\n\nconst tenSentences = () => faker.lorem.paragraphs(1)\n\nfunction MapFrame() {\n\n    const [seconds, setSeconds] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n          setSeconds(seconds => seconds + 60);\n        }, 60000);\n        return () => clearInterval(interval);\n      }, []);\n\n    return (\n        <iframe key={seconds} height=\"400vh\" src=\"https://map.geo.admin.ch/embed.html?lang=de&topic=ech&bgLayer=ch.swisstopo.pixelkarte-farbe&layers=ch.swisstopo.zeitreihen,ch.bfs.gebaeude_wohnungs_register,ch.bav.haltestellen-oev,ch.swisstopo.swisstlm3d-wanderwege,KML%7C%7Chttps:%2F%2Fpublic.geo.admin.ch%2Fx20-T-HaRN2B1HBQK8UKBg&layers_opacity=1,1,1,0.8,1&layers_visibility=false,false,false,false,true&layers_timestamp=18641231,,,,&E=2605883.78&N=1216144.64&zoom=10\" />\n    )\n}\n\nfunction Dashboard() {\n  return (\n    <div>\n        <div className=\"container is-fluid has-text-centered mb-4\">\n            <h1 className=\"title is-1 \">GBT Einsatzübung 2021</h1>\n        </div>\n        <div className=\"tile is-ancestor\">\n            <div className=\"tile is-3 is-vertical is-parent\">\n                <div className=\"tile is-child box has-background-danger has-text-white-bis has-text-centered\">\n                <h2 className=\"title has-text-white-bis\">Personen</h2>\n                    <nav className=\"level is-block\">\n                       <div className=\"level-item has-text-centered\">\n                            <div className=\"mb-4\">\n                            <p className=\"heading is-size-6\" >Tote</p>\n                            <p className=\"subtitle is-size-3 has-text-white-bis\">{faker.random.number(30)}</p>\n                            </div>\n                        </div>\n                        <div className=\"level-item has-text-centered\">\n                            <div className=\"mb-4\">\n                            <p className=\"heading is-size-6\" >Verletzte</p>\n                            <p className=\"subtitle is-size-3 has-text-white-bis\">{faker.random.number(30)}</p>\n                            </div>\n                        </div>\n                        <div className=\"level-item has-text-centered\">\n                            <div className=\"mb-4\">\n                            <p className=\"heading is-size-6\">Eingeschlossene</p>\n                            <p className=\"subtitle is-size-3 has-text-white-bis\">{faker.random.number(30)}</p>\n                            </div>\n                        </div>\n                        <div className=\"level-item has-text-centered\">\n                            <div className=\"\">\n                            <p className=\"heading is-size-6\">Obdachlose</p>\n                            <p className=\"subtitle is-size-3 has-text-white-bis\">{faker.random.number(30)}</p>\n                            </div>\n                        </div>\n                    </nav>       \n                </div>\n                <div className=\"tile is-child box has-background-info has-text-white-bis has-text-centered\">\n                    <h2 className=\"title has-text-white-bis\">Mittel</h2>\n                    <nav className=\"level is-block\">\n                       <div className=\"level-item has-text-centered has-text-white-bis\">\n                            <div className=\"mb-4\">\n                            <p className=\"heading is-size-6\" >Feuerwehr</p>\n                            <p className=\"subtitle is-size-3 has-text-white-bis\">{faker.random.number(30)}</p>\n                            </div>\n                        </div>\n                        <div className=\"level-item has-text-centered has-text-white-bis\">\n                            <div className=\"mb-4\">\n                            <p className=\"heading is-size-6\" >Polizei</p>\n                            <p className=\"subtitle is-size-3 has-text-white-bis\">{faker.random.number(30)}</p>\n                            </div>\n                        </div>\n                        <div className=\"level-item has-text-centered\">\n                            <div className=\"mb-4\">\n                            <p className=\"heading is-size-6\">Technische Dienste</p>\n                            <p className=\"subtitle is-size-3 has-text-white-bis\">{faker.random.number(30)}</p>\n                            </div>\n                        </div> \n                        <div className=\"level-item has-text-centered\">\n                            <div className=\"\">\n                            <p className=\"heading is-size-6\">Zivilschutz</p>\n                            <p className=\"subtitle is-size-3 has-text-white-bis\">{faker.random.number(30)}</p>\n                            </div>\n                        </div>\n                    </nav>   \n                </div>\n            </div>\n            <div className=\"tile is-vertical is-parent\">\n                <div className=\"tile is-child hero\">\n                    <MapFrame />\n                </div>\n                <div className=\"tile is-child box\">\n                    <div className=\"container is-fluid\">\n                        <h2 className=\"title is-4\">Schlüsselnachrichten</h2>\n                        <JournalMessage assignments={[\"Lage\", \"Pol\"]} status={Status.Important} sender={faker.name.findName()} receiver={faker.name.findName()} message={tenSentences()}  timeDate={faker.date.recent(1)}/>\n                        <JournalMessage assignments={[\"ZS\", \"San\"]} status={Status.Critical} sender={faker.name.findName()} receiver={faker.name.findName()} message={tenSentences()}  timeDate={faker.date.recent(1)}/>\n                        <JournalMessage assignments={[\"Pol\", \"ZS\", \"San\"]}status={Status.Important} sender={faker.name.findName()} receiver={faker.name.findName()} message={tenSentences()}  timeDate={faker.date.recent(1)}/>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nfunction List() {\n  \n  return (\n    <h3 className=\"title is-size-3\">Mittel</h3>\n  );\n}\n\nexport default List;\n","import React from 'react';\n\nfunction List() {\n  \n  return (\n    <h3 className=\"title is-size-3\">Pendenzen</h3>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    useRouteMatch,\n  } from \"react-router-dom\";\nimport { List as JournalMessageList, Editor as JournalEditor, HotlineEditor} from 'views/journal';\nimport { List as IncidentList, Dashboard as IncidentDashboard } from 'views/incident';\nimport { List as ResourcesList } from 'views/resource';\nimport { List as TaskList } from 'views/tasks';\n\n\nfunction IncidentRouter() {\n    let match = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${match.path}/:incidentId/dashboard`} component={IncidentDashboard} />\n      <Route path={`${match.path}/:incidentId/journal/:journalId/edit`}   component={JournalEditor} />\n      <Route path={`${match.path}/:incidentId/journal/:journalId`}   component={JournalMessageList} />\n      <Route path={`${match.path}/:incidentId/resources`}   component={ResourcesList} />\n      <Route path={`${match.path}/:incidentId/tasks`}   component={TaskList} />\n      <Route path={`${match.path}/:incidentId/hotline`}   component={HotlineEditor} />\n\n\n      <Route path={`${match.path}/list`} component={IncidentList} />\n      {/* <Route path={`${match.path}/new`} component={Create} /> */}\n      <Route path={match.path} component={IncidentList} />\n    </Switch>\n  );\n}\n\nexport default IncidentRouter;\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: '/api/graph',\n  cache: new InMemoryCache(),\n\n});\n\n\nexport default client;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport './App.scss';\nimport { Navbar, Footer } from 'components';\nimport { IncidentRouter } from 'routes';\n\nimport { ApolloProvider } from '@apollo/client';\nimport { default as client } from './client';\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Navbar />\n        <section className=\"section\">\n          <Switch>\n            <Route path=\"/incident\">\n              <IncidentRouter />\n            </Route>\n            <Route path=\"/\">\n              <Redirect to=\"/incident/6796c0d0-ddfa-4d81-870b-121200723e0c/dashboard\" />\n            </Route>\n          </Switch>\n        </section>\n        <Footer />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}